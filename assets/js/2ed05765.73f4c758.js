"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[740],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>k});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),i=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=i(a),u=n,k=c["".concat(l,".").concat(u)]||c[u]||m[u]||o;return a?r.createElement(k,s(s({ref:t},d),{},{components:a})):r.createElement(k,s({ref:t},d))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[c]="string"==typeof e?e:n,s[1]=p;for(var i=2;i<o;i++)s[i]=a[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8537:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>i});var r=a(7462),n=(a(7294),a(3905));const o={sidebar_position:2,title:"DB Setup",sidebar_label:"DB Setup"},s=void 0,p={unversionedId:"tech/deployment/db-setup",id:"tech/deployment/db-setup",title:"DB Setup",description:"Which db to setup on which node",source:"@site/docs/tech/deployment/db-setup.md",sourceDirName:"tech/deployment",slug:"/tech/deployment/db-setup",permalink:"/docs/tech/deployment/db-setup",draft:!1,editUrl:"https://github.com/Samarth-HP/docs/tree/master/docs/tech/deployment/db-setup.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"DB Setup",sidebar_label:"DB Setup"},sidebar:"overview",previous:{title:"Current Infrastructure",permalink:"/docs/tech/deployment/current-infra"},next:{title:"Docker Swarm Setup",permalink:"/docs/tech/deployment/docker-swarm-setup"}},l={},i=[{value:"Which db to setup on which node",id:"which-db-to-setup-on-which-node",level:2},{value:"Backup &amp; Restore existing prod schema &amp; db",id:"backup--restore-existing-prod-schema--db",level:2},{value:"eSamwad Backend Database",id:"esamwad-backend-database",level:4},{value:"Other Services",id:"other-services",level:4},{value:"ODK UCI Adapter",id:"odk-uci-adapter",level:5},{value:"Doc-generator",id:"doc-generator",level:5},{value:"Yaus",id:"yaus",level:5},{value:"Templater",id:"templater",level:5},{value:"Hasura Metadata",id:"hasura-metadata",level:2},{value:"Doc Generator",id:"doc-generator-1",level:3},{value:"ODK UCI Adapter",id:"odk-uci-adapter-1",level:3},{value:"Esamwad Backend",id:"esamwad-backend",level:3}],d={toc:i},c="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(c,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"which-db-to-setup-on-which-node"},"Which db to setup on which node"),(0,n.kt)("p",null,"As we've outlined ",(0,n.kt)("a",{parentName:"p",href:"/docs/tech/deployment/current-infra#db1-server-"},"here"),", we have a dedicated server for storing ",(0,n.kt)("inlineCode",{parentName:"p"},"eSamwad backend")," data due to its resource-intensive nature. Similarly, the databases for the rest of the cross-cutting services are hosted on a separate server, as mentioned ",(0,n.kt)("a",{parentName:"p",href:"/docs/tech/deployment/current-infra#db2-server-"},"here"),", since they are lightweight services and can be accommodated onto a single server."),(0,n.kt)("h2",{id:"backup--restore-existing-prod-schema--db"},"Backup & Restore existing prod schema & db"),(0,n.kt)("p",null,"Since backing up and restoring databases is a routine task applicable to various database systems, we have provided comprehensive steps for performing these operations."),(0,n.kt)("h4",{id:"esamwad-backend-database"},"eSamwad Backend Database"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"eSamwad backend")," database resides on the ",(0,n.kt)("strong",{parentName:"p"},"db1 server"),", requiring an SSH connection to perform backup or restore operations."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Backup:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"# Backup to a .sql file\ndocker-compose -f /home/samarth-devops/docker-compose/db-compose-esamwad-be.yml exec postgres-esamwad-be pg_dump -U postgres -d postgres > backup_2023_08_07_17_00_00.sql\n\n# Compress the backup file (Optional)\ntar -cvzf backup_2023_08_07_17_00_00.sql.tar.gz backup_2023_08_07_17_00_00.sql\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Restore:")),(0,n.kt)("p",null,"If the ",(0,n.kt)("inlineCode",{parentName:"p"},"sql")," file is zipped, unzip it before passing it to the ",(0,n.kt)("inlineCode",{parentName:"p"},"psql")," utility."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"cat backup_2023_08_07_17_00_00.sql | docker-compose -f /home/samarth-devops/docker-compose/db-compose-esamwad-be.yml exec -T postgres-esamwad-be psql -U postgres -d postgres\n")),(0,n.kt)("h4",{id:"other-services"},"Other Services"),(0,n.kt)("p",null,"The databases for the following services are deployed on the ",(0,n.kt)("strong",{parentName:"p"},"db2 server"),", requiring SSH access for backup or restore operations."),(0,n.kt)("h5",{id:"odk-uci-adapter"},"ODK UCI Adapter"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Backup:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose -f /home/samarth-devops/docker-compose/db-compose.yml exec postgres-odk-adapter pg_dump -U postgres -d postgres > backup_2023_08_07_17_00_00.sql\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Restore:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"cat backup_2023_08_07_17_00_00.sql | docker-compose -f /home/samarth-devops/docker-compose/db-compose.yml exec -T postgres-odk-adapter psql -U postgres -d postgres\n")),(0,n.kt)("h5",{id:"doc-generator"},"Doc-generator"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Backup:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose -f /home/samarth-devops/docker-compose/db-compose.yml exec postgres-doc-gen pg_dump -U postgres -d postgres > backup_2023_08_07_17_00_00.sql\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Restore:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"cat backup_2023_08_07_17_00_00.sql | docker-compose -f /home/samarth-devops/docker-compose/db-compose.yml exec -T postgres-doc-gen psql -U postgres -d postgres\n")),(0,n.kt)("h5",{id:"yaus"},"Yaus"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Backup:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose -f /home/samarth-devops/docker-compose/db-compose.yml exec postgres-yaus pg_dump -U postgres -d postgres > backup_2023_08_07_17_00_00.sql\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Restore:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"cat backup_2023_08_07_17_00_00.sql | docker-compose -f /home/samarth-devops/docker-compose/db-compose.yml exec -T postgres-yaus psql -U postgres -d postgres\n")),(0,n.kt)("h5",{id:"templater"},"Templater"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Backup:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose -f /home/samarth-devops/docker-compose/db-compose.yml exec postgres-templater pg_dump -U postgres -d postgres > backup_2023_08_07_17_00_00.sql\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Restore:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"cat backup_2023_08_07_17_00_00.sql | docker-compose -f /home/samarth-devops/docker-compose/db-compose.yml exec -T postgres-templater psql -U postgres -d postgres\n")),(0,n.kt)("p",null,"Remember to replace the timestamps in the file names and other variables with your specific details."),(0,n.kt)("h2",{id:"hasura-metadata"},"Hasura Metadata"),(0,n.kt)("p",null,"Install Hasura CLI: ",(0,n.kt)("a",{parentName:"p",href:"https://hasura.io/docs/latest/hasura-cli/install-hasura-cli/"},"https://hasura.io/docs/latest/hasura-cli/install-hasura-cli/")),(0,n.kt)("h3",{id:"doc-generator-1"},"Doc Generator"),(0,n.kt)("p",null,"As we have already imported/restored the existing DB; we don't have to apply migrations again. We'll just have to apply metadata."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"cd hasura/doc-generator")),(0,n.kt)("li",{parentName:"ul"},"Create ",(0,n.kt)("inlineCode",{parentName:"li"},".env")," using ",(0,n.kt)("inlineCode",{parentName:"li"},"sample.env")," as a reference & configure the credentials."),(0,n.kt)("li",{parentName:"ul"},"Mark the initial migration as present: ",(0,n.kt)("inlineCode",{parentName:"li"},"hasura migrate apply --skip-execution --version 1692688379356"),"."),(0,n.kt)("li",{parentName:"ul"},"Run ",(0,n.kt)("inlineCode",{parentName:"li"},"hasura metadata apply")," to sync the metadata.")),(0,n.kt)("h3",{id:"odk-uci-adapter-1"},"ODK UCI Adapter"),(0,n.kt)("p",null,"As we have already imported/restored the existing DB; we don't have to apply migrations again. We'll just have to apply metadata."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"cd hasura/odk-uci-adapter")),(0,n.kt)("li",{parentName:"ul"},"Create ",(0,n.kt)("inlineCode",{parentName:"li"},".env")," using ",(0,n.kt)("inlineCode",{parentName:"li"},"sample.env")," as a reference & configure the credentials."),(0,n.kt)("li",{parentName:"ul"},"Mark the initial migration as present: ",(0,n.kt)("inlineCode",{parentName:"li"},"hasura migrate apply --skip-execution --version 1692701191239"),"."),(0,n.kt)("li",{parentName:"ul"},"Run ",(0,n.kt)("inlineCode",{parentName:"li"},"hasura metadata apply")," to sync the metadata.")),(0,n.kt)("h3",{id:"esamwad-backend"},"Esamwad Backend"),(0,n.kt)("p",null,"As we have already imported/restored the existing DB; we don't have to apply migrations again. We'll just have to apply metadata."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"cd hasura/esamwad-backend")),(0,n.kt)("li",{parentName:"ul"},"Create ",(0,n.kt)("inlineCode",{parentName:"li"},".env")," using ",(0,n.kt)("inlineCode",{parentName:"li"},"sample.env")," as a reference & configure the credentials."),(0,n.kt)("li",{parentName:"ul"},"Mark the initial migration as present: ",(0,n.kt)("inlineCode",{parentName:"li"},"hasura migrate apply --skip-execution --version 1692692627467"),"."),(0,n.kt)("li",{parentName:"ul"},"Run ",(0,n.kt)("inlineCode",{parentName:"li"},"hasura metadata apply")," to sync the metadata.")))}m.isMDXComponent=!0}}]);