"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[451],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(n),m=i,k=c["".concat(l,".").concat(m)]||c[m]||d[m]||a;return n?r.createElement(k,s(s({ref:t},u),{},{components:n})):r.createElement(k,s({ref:t},u))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,s=new Array(a);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[c]="string"==typeof e?e:i,s[1]=o;for(var p=2;p<a;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7543:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:4,title:"Jenkins Setup",sidebar_label:"Jenkins Setup"},s="Steps to setup E2E deployment using Jenkins, Ansible, Docker Swarm",o={unversionedId:"tech/deployment/jenkins-setup",id:"tech/deployment/jenkins-setup",title:"Jenkins Setup",description:"- Clone the repo in the /home (make sure to clone it there, as we will be creating symlink assuming this) folder of the server and run jenkins-setup.sh",source:"@site/docs/tech/deployment/jenkins-setup.md",sourceDirName:"tech/deployment",slug:"/tech/deployment/jenkins-setup",permalink:"/docs/tech/deployment/jenkins-setup",draft:!1,editUrl:"https://github.com/Samarth-HP/docs/tree/master/docs/tech/deployment/jenkins-setup.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Jenkins Setup",sidebar_label:"Jenkins Setup"},sidebar:"overview",previous:{title:"Docker Swarm Setup",permalink:"/docs/tech/deployment/docker-swarm-setup"},next:{title:"Vault Setup",permalink:"/docs/tech/deployment/vault-setup"}},l={},p=[],u={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"steps-to-setup-e2e-deployment-using-jenkins-ansible-docker-swarm"},"Steps to setup E2E deployment using Jenkins, Ansible, Docker Swarm"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Clone the repo in the ",(0,i.kt)("inlineCode",{parentName:"li"},"/home")," (make sure to clone it there, as we will be creating symlink assuming this) folder of the server and run ",(0,i.kt)("inlineCode",{parentName:"li"},"jenkins-setup.sh"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cd scripts\nchmod +x jenkins-setup.sh\n./jenkins-setup.sh\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Go to localhost:8080 and follow the mentioned steps to create admin user and then install suggested plugins.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Go to ",(0,i.kt)("strong",{parentName:"p"},"Manage Jenkins -> Plugin Manager")," and install ",(0,i.kt)("strong",{parentName:"p"},"Copy Artifact"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Run ",(0,i.kt)("inlineCode",{parentName:"p"},"jenkins-jobs-setup.sh")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cd scripts\nchmod +x jenkins-job-setup.sh\n./jenkins-job-setup.sh\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"If the project is hosted on GitHub we would need ssh to connect to GitHub, in that case switch to jenkins user ",(0,i.kt)("inlineCode",{parentName:"p"},"su jenkins"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Generate key-pair ",(0,i.kt)("inlineCode",{parentName:"p"},"ssh-keygen"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Add private key to Jenkins and public key to GitHub")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Configure jobs to use the new credentials")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"On the jenkins server setup a local registry"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"docker run -d -p 5000:5000 --restart=always --name registry registry:2\n")),(0,i.kt)("p",null,"Also, you'll need to add this registry address to insecure-registries on all nodes accessing it. Open/create file ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/docker/daemon.json")," and add:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{\n    "insecure-registries" : [ "x.x.x.x:5000" ]\n}\n')),(0,i.kt)("p",null,"where ",(0,i.kt)("inlineCode",{parentName:"p"},"x.x.x.x")," is the IP of the node where registry is hosted."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Run the following and add ",(0,i.kt)("inlineCode",{parentName:"li"},"jenkins ALL=(ALL) NOPASSWD: ALL")," at the end")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo visudo\n\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Install Hashicorp vault plugin. Login into jenkins user: ",(0,i.kt)("inlineCode",{parentName:"p"},"su jenkins")," & then install using command: ",(0,i.kt)("inlineCode",{parentName:"p"},"pip install hvac"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Add Vault token variables in Jenkins ....")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Generate an ssh key-pair for jenkins user & add the public key to the developer's Github account which has access to all the private repos in use currently. Some pipelines do operations like ",(0,i.kt)("inlineCode",{parentName:"p"},"git clone")," and they need access to git. Post adding the key, please also verify git is able to verify the public key using command ",(0,i.kt)("inlineCode",{parentName:"p"},"ssh -T git@github.com")))))}d.isMDXComponent=!0}}]);