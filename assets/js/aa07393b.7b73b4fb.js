"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[426],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4890:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:6,title:"Service Onboarding",sidebar_label:"Service Onboarding"},o="Steps to on-board a new service",l={unversionedId:"tech/deployment/service-onboarding",id:"tech/deployment/service-onboarding",title:"Service Onboarding",description:"Pre-requisites",source:"@site/docs/tech/deployment/service-onboarding.md",sourceDirName:"tech/deployment",slug:"/tech/deployment/service-onboarding",permalink:"/docs/tech/deployment/service-onboarding",draft:!1,editUrl:"https://github.com/Samarth-HP/docs/tree/master/docs/tech/deployment/service-onboarding.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"Service Onboarding",sidebar_label:"Service Onboarding"},sidebar:"overview",previous:{title:"Vault Setup",permalink:"/docs/tech/deployment/vault-setup"},next:{title:"Analytics",permalink:"/docs/tech/analytics"}},s={},p=[{value:"Pre-requisites",id:"pre-requisites",level:3},{value:"Steps for build",id:"steps-for-build",level:3},{value:"Steps for deploy",id:"steps-for-deploy",level:3},{value:"Gotchas for localsetup",id:"gotchas-for-localsetup",level:3}],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"steps-to-on-board-a-new-service"},"Steps to on-board a new service"),(0,i.kt)("h3",{id:"pre-requisites"},"Pre-requisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"First setup jenkins using ",(0,i.kt)("inlineCode",{parentName:"li"},"jenkins-setup.md")),(0,i.kt)("li",{parentName:"ul"},"Each service should have a build folder which contains ",(0,i.kt)("inlineCode",{parentName:"li"},"Dockerfile"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"Jenkinsfile")," and a ",(0,i.kt)("inlineCode",{parentName:"li"},"build.sh")," if needed. Jenkins file is very generic and one can use the given ",(0,i.kt)("inlineCode",{parentName:"li"},"Jenkinsfile")," in the root folder of this repo. Following should be the repo structure at GitHub or any other SCM.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"service_repo_name\n    - build\n        - Jenkinsfile\n        - Dockerfile\n        - build.sh (optional)\n    - src\n    - other folders\n")),(0,i.kt)("h3",{id:"steps-for-build"},"Steps for build"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Now go to build folder and create a new item. Copy an existing build job for this new item."),(0,i.kt)("li",{parentName:"ul"},"Configure the newly created job and modify the paths of ",(0,i.kt)("inlineCode",{parentName:"li"},"Dockerfile"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"Jenkins"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"Git Repo")," according to your repository structure."),(0,i.kt)("li",{parentName:"ul"},"Test a build by clicking ",(0,i.kt)("inlineCode",{parentName:"li"},"Scan Multibranch pipeline now")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"The first build will fail on any branch always"),", rebuild again by clicking ",(0,i.kt)("inlineCode",{parentName:"li"},"Rebuild with Parameters"))),(0,i.kt)("h3",{id:"steps-for-deploy"},"Steps for deploy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Now go to deploy folder and create a new item. Copy an existing deploy job for this new item."),(0,i.kt)("li",{parentName:"ul"},"Go to ",(0,i.kt)("inlineCode",{parentName:"li"},"ansible_workspace_dir")," and add a new tag and respective roles for the new service. You can use the structure of existing roles to add a new service."),(0,i.kt)("li",{parentName:"ul"},"Update the Nginx conf file to expose your services on the local host from the docker swarm.")),(0,i.kt)("h3",{id:"gotchas-for-localsetup"},"Gotchas for localsetup"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Uncomment the lines in inventory/hosts")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Docker swarm will have all the services on a default network. Run ",(0,i.kt)("inlineCode",{parentName:"p"},"docker network create -d overlay application_default")," to create a default network for your services.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"ansible playbooks have global variables declared in ",(0,i.kt)("inlineCode",{parentName:"p"},"group_vars/dev.yml")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"vars/main.yml")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"ansible_workspace_dir"),". Local variables are there in each roles' ",(0,i.kt)("inlineCode",{parentName:"p"},"vars/main.yml"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"We use hashicorp vaults to store passwords so modify the ",(0,i.kt)("inlineCode",{parentName:"p"},"secret path")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"VAULT_TOKEN")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"VAULT_ADDR")," manually."))),(0,i.kt)("h1",{id:"possible-upcoming-updates"},"Possible upcoming updates"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"standard routes for each services might be used in nginx default conf. Like to access esamwad-backend a route ",(0,i.kt)("inlineCode",{parentName:"p"},"/samarth/esamwad-backend")," would be defined.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Hashicorp intergration to manage secrets"))))}u.isMDXComponent=!0}}]);